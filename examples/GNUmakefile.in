# Makefile for the libzeep-http library
#
# Copyright Maarten L. Hekkelman, UMC St. Radboud 2008-2013.
#        Copyright Maarten L. Hekkelman, 2014-2019
# Distributed under the Boost Software License, Version 1.0.
#    (See accompanying file LICENSE_1_0.txt or copy at
#          http://www.boost.org/LICENSE_1_0.txt)

.PHONY: firstTarget
firstTarget: all

CXX					= @CXX@
CXXFLAGS			= @CXXFLAGS@ @BOOST_CPPFLAGS@
LDFLAGS				= @LDFLAGS@ @LIBS@ @BOOST_LDFLAGS@
LIBS				= @LIBS@

prefix				= @prefix@
exec_prefix			= @exec_prefix@
libdir				= @libdir@
includedir			= @includedir@

GNUmakefile: ../config.status GNUmakefile.in
	cd ..; $(SHELL) ./config.status

../config.status: ../configure
	cd ..; $(SHELL) ./config.status --recheck

../configure: ../configure.ac
	cd ..; autoconf

# main build variables
CXXFLAGS            += -I. -pthread -I ../include/
CXXFLAGS            += -Wall -Wno-multichar

# Use the DEBUG flag to build debug versions of the code
DEBUG               = @DEBUG@

# resource support?
MRC					= @MRC@
ifneq "x$(MRC)" "x"
USE_RSRC			= 1
DEFINES				+= USE_RSRC
else
USE_RSRC			= 0
endif

ifeq "$(DEBUG)" "1"
DEFINES				+= DEBUG
CXXFLAGS            += -g -O0
LDFLAGS				+= -g
else
CXXFLAGS			+= -O3
DEFINES				+= NDEBUG
endif

# targets

VPATH += src:test

CXXFLAGS			+= $(DEFINES:%=-D%)

OBJDIR = obj
ifeq "$(DEBUG)" "1"
	OBJDIR	:= $(OBJDIR).dbg
endif

$(OBJDIR):
	mkdir -p $(OBJDIR)

$(OBJDIR)/%.o: %.cpp | $(OBJDIR)
	@ echo "cc>" $<
	@ $(CXX) -MD -c -o $@ $< $(CFLAGS) $(CXXFLAGS)

$(OBJDIR)/dummy_rsrc.o:
	$(MRC) -o $@ test.xml

clean:
	rm -rf $(OBJDIR)/* $(EXAMPLES)

ZEEP_LIBS = http xml json
BOOST_LIBS = system

define EXAMPLE_template =

-include $$(OBJDIR)/$(1).d

$(1)_OBJECTS = $$(OBJDIR)/$(1).o

ifneq ($$(USE_RSRC),0)
$(1)_OBJECTS += $$(OBJDIR)/dummy_rsrc.o
endif

$(1): $$($(1)_OBJECTS)
	@ echo "ld> $(1)"
	@ $(CXX) -o $$@ $$($(1)_OBJECTS) $$(CFLAGS) $$(CXXFLAGS) $(LDFLAGS) -L../lib $(ZEEP_LIBS:%=-lzeep-%) $(BOOST_LIBS:%=-lboost_%) -lstdc++fs

endef

EXAMPLES = \
	http-server-0 http-server-1 http-server-2 \
	serialize-xml synopsis-json synopsis-xml validating-xml-sample xpath-sample \
	synopsis-el-1 security-sample rest-sample

$(foreach part,$(EXAMPLES),$(eval $(call EXAMPLE_template,$(part))))

.PHONY: examples
examples: $(EXAMPLES)

all: examples

FORCE:

